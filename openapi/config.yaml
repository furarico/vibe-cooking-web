# OpenAPI TypeScript Generator Configuration
# This configuration file is used to generate TypeScript types and client code
# from the OpenAPI schema defined in openapi.yaml

# Source OpenAPI specification file
inputSpec: ./openapi.yaml

# Output directory for generated files
outputDir: ../src/lib/api

# Generator to use (openapi-typescript-codegen is recommended for TypeScript)
generatorName: typescript-fetch

# Generator-specific options
generatorOptions:
  # Generate TypeScript interfaces/types
  typescriptThreePlus: true

  # Use string enums instead of const enums
  stringEnums: true

  # Generate models as interfaces (not classes)
  modelPropertyNaming: original

  # Enable strict mode
  supportsES6: true

  # Generate API client with fetch
  runtime: fetch

  # Include request/response types
  withInterfaces: true

  # Generate separate files for models and APIs
  useSeparateModelsAndApi: true

  # API package name
  apiPackage: api

  # Model package name
  modelPackage: models

# Template directory (optional - uses built-in templates if not specified)
# templateDir: ./templates

# Additional properties
additionalProperties:
  # Package name for generated code
  npmName: '@/lib/api'

  # Package version
  npmVersion: '1.0.0'

  # Enable nullable types
  nullSafeAdditionalProps: true

  # Generate JSDoc comments
  withJSDoc: true

  # Use async/await
  usePromises: true

  # Generate validation code
  validateRequiredInUri: true

# Files to ignore during generation
ignore:
  - .openapi-generator-ignore
  - .gitignore
  - package.json
  - README.md

# Global properties that can be used in templates
globalProperties:
  # Skip form model generation
  skipFormModel: true

  # Generate model tests
  modelTests: false

  # Generate API tests
  apiTests: false

  # Generate model documentation
  modelDocs: false

  # Generate API documentation
  apiDocs: false
